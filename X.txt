AI-DEV-AGENT/
â”œâ”€â”€ ðŸ“‚ client/               # Frontend (React/MUI UI)
â”‚   â”œâ”€â”€ ðŸ“‚ public/
â”‚   â””â”€â”€ ðŸ“‚ src/
â”‚       â”œâ”€â”€ ðŸ“‚ components/   # Reusable UI components
â”‚       â”œâ”€â”€ ðŸ“‚ pages/        # Page-wise routes (Home, Chat, etc.)
â”‚       â”œâ”€â”€ ðŸ“‚ services/     # API requests, data fetch logic
â”‚       â””â”€â”€ ðŸ“‚ utils/        # Helper functions
â”œâ”€â”€ ðŸ“‚ data/                 
â”‚   â”œâ”€â”€ ðŸ“‚ memory/           # Store pickle files for conversation memory
â”‚   â”‚   â””â”€â”€ conversation.pkl
â”‚   â”œâ”€â”€ ðŸ“‚ snapshots/        # Store JSON/code snapshots
â”‚   â”‚   â”œâ”€â”€ snapshot_1.json
â”‚   â”‚   â””â”€â”€ snapshot_2.json
â”‚   â””â”€â”€ ðŸ“‚ logs/             # Store API call logs and errors
â”‚       â”œâ”€â”€ error.log
â”‚       â””â”€â”€ request.log
â”œâ”€â”€ ðŸ“‚ src/                  # Backend (Flask Codebase)
â”‚   â”œâ”€â”€ ðŸ“‚ api/              # API route handlers
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ routes.py        # Main Flask routes
â”‚   â”‚   |â”€â”€ utils.py         # Utility functions
â”‚   â”‚   â””â”€â”€ ðŸ“‚ services/
â”‚   â”‚       â”œâ”€â”€ __init__.py
â”‚   â”‚       â””â”€â”€ file_handler.py
â”‚   â”œâ”€â”€ ðŸ“‚ core/             # Core AI/LLM Logic
â”‚   â”‚   â”œâ”€â”€ ai_agent.py      # AI Agent logic
â”‚   â”‚   â”œâ”€â”€ memory.py        # Memory handling (pickle load/save)
â”‚   â”‚   â””â”€â”€ chromadb.py      # (If needed in future for storing chunks)
â”‚   â”œâ”€â”€ ðŸ“‚ models/           # Database models (if using SQL/NoSQL)
â”‚   â”‚   â””â”€â”€ model.py
â”‚   â””â”€â”€ ðŸ“‚ config/           # Configs and environment variables
â”‚       â”œâ”€â”€ config.py
â”‚       â””â”€â”€ secrets.json
â”œâ”€â”€ ðŸ“‚ tests/                # Unit and integration tests
â”‚   â””â”€â”€ test_ai_agent.py
â”œâ”€â”€ .gitignore               # Ignore unnecessary files
â”œâ”€â”€ app.py                   # Main Flask entry point
â”œâ”€â”€ requirements.txt         # Python dependencies
â”œâ”€â”€ run.sh                   # Shell script to run the app (Linux/Mac)
â””â”€â”€ run.ps1                  # PowerShell script to run the app (Windows)


to reduce the AI API calls on modyfying files, instead of ADD more files, just provide a button as MODIFY and then using a pop give user option to remove and add new files, once user save the changes an ai api should be called.

